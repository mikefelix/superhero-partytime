# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
POST    /login                                             controllers.ApplicationController.login
GET     /games/:id                                         controllers.ApplicationController.getGame(id: Long)
#POST    /games                                             controllers.ApplicationController.postGame

POST    /games/:gameId/items                               controllers.ApplicationController.postItem(gameId: Long)
GET     /games/:gameId/items                               controllers.ApplicationController.getItems(gameId: Long)

POST    /games/:gameId/powers                              controllers.ApplicationController.postPower(gameId: Long)
GET     /games/:gameId/powers                              controllers.ApplicationController.getPowers(gameId: Long)

GET     /games/:gameId/quests/:questId/items               controllers.ApplicationController.listItemsForQuest(gameId: Long, questId: Long)
GET     /games/:gameId/quests/:questId/items/:id           controllers.ApplicationController.getItem(gameId: Long, questId: Long, id: Long)
#GET     /games/:gameId/quests                              controllers.ApplicationController.listQuests(gameId: Long)
GET     /games/:gameId/quests/:id                          controllers.ApplicationController.getQuest(gameId: Long, id: Long)
POST    /games/:gameId/quests                              controllers.ApplicationController.postQuest(gameId: Long)
PUT     /games/:gameId/quests/:id                          controllers.ApplicationController.putQuest(gameId: Long, id: Long)
DELETE  /games/:gameId/quests/:id                          controllers.ApplicationController.deleteQuest(gameId: Long, id: Long)

GET     /games/:gameId/players/:playerId/quest             controllers.ApplicationController.getQuestForPlayer(gameId: Long, playerId: Long)
GET     /games/:gameId/players/:playerId/sidequest         controllers.ApplicationController.getSidequestForPlayer(gameId: Long, playerId: Long)
GET     /games/:gameId/players/:playerId/items             controllers.ApplicationController.listItemsForPlayer(gameId: Long, playerId: Long)
GET     /games/:gameId/players                             controllers.ApplicationController.listPlayers(gameId: Long)
GET     /games/:gameId/players/:id                         controllers.ApplicationController.getPlayer(gameId: Long, id: Long)
POST    /games/:gameId/players                             controllers.ApplicationController.postPlayer(gameId: Long)
PUT     /games/:gameId/players/:id                         controllers.ApplicationController.putPlayer(gameId: Long, id: Long)
DELETE  /games/:gameId/players/:id                         controllers.ApplicationController.deletePlayer(gameId: Long, id: Long)

GET     /games/:gameId/players/:playerId/offeroptions      controllers.ApplicationController.getOfferOptions(gameId: Long, playerId: Long)

GET     /games/:gameId/players/:playerId/trades            controllers.ApplicationController.listTradesForPlayer(gameId: Long, playerId: Long)
POST    /games/:gameId/players/:playerId/trades            controllers.ApplicationController.postTrade(gameId: Long, playerId: Long)
PUT     /games/:gameId/players/:playerId/trades/:tradeId   controllers.ApplicationController.putTrade(gameId: Long, playerId: Long, tradeId: Long)

GET     /games/:gameId/players/:playerId/chats             controllers.ApplicationController.getLatestChats(gameId: Long, playerId: Long)
POST    /games/:gameId/players/:playerId/chats             controllers.ApplicationController.postChat(gameId: Long, playerId: Long)

GET     /form/games                                        controllers.FormController.listGames
GET     /form/games/:gameId                                controllers.FormController.showGameForm(gameId: Long)
POST    /form/games/:gameId                                controllers.FormController.updateGame(gameId: Long)
POST    /form/games/:gameId/init                           controllers.FormController.init(gameId: Long)
POST    /form/games/:gameId/reset                          controllers.FormController.reset(gameId: Long)

GET     /form/games/:gameId/quests                         controllers.FormController.listQuests(gameId: Long)
GET     /form/games/:gameId/quests/:questId                controllers.FormController.showQuestForm(gameId: Long, questId: Long)
POST    /form/games/:gameId/quests/:questId                controllers.FormController.updateQuest(gameId: Long, questId: Long)

GET     /form/games/:gameId/players                        controllers.FormController.listPlayers(gameId: Long)
GET     /form/games/:gameId/players/:playerId              controllers.FormController.showPlayerForm(gameId: Long, playerId: Long)
POST    /form/games/:gameId/players/:playerId              controllers.FormController.updatePlayer(gameId: Long, playerId: Long)

GET     /form/games/:gameId/items                          controllers.FormController.listItems(gameId: Long)
GET     /form/games/:gameId/items/:id                      controllers.FormController.showItemForm(gameId: Long, id: Long)
POST    /form/games/:gameId/items/:id                      controllers.FormController.updateItem(gameId: Long, id: Long)

GET     /form/games/:gameId/powers                         controllers.FormController.listPowers(gameId: Long)
GET     /form/games/:gameId/powers/:id                     controllers.FormController.showPowerForm(gameId: Long, id: Long)
POST    /form/games/:gameId/powers/:id                     controllers.FormController.updatePower(gameId: Long, id: Long)

GET     /                                                  controllers.FormController.login()
POST    /form/login                                        controllers.FormController.authenticate()

# Map static resources from the /public folder to the /assets URL path
#GET     /assets/*file                                      controllers.Assets.versioned(path="/public", file: Asset)
GET     /assets/*file                                      controllers.Assets.at(path="/public", file)
